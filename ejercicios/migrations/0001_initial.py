# Generated by Django 5.2.4 on 2025-07-29 02:13

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TipoEjercicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_ejercicio', models.CharField(choices=[('funciones', 'Funciones'), ('matrices', 'Matrices'), ('logaritmos', 'Logaritmos'), ('limites', 'Límites')], max_length=50, verbose_name='tipo de ejercicio')),
            ],
        ),
        migrations.CreateModel(
            name='TipoFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True, verbose_name='tipo de feedback')),
            ],
        ),
        migrations.CreateModel(
            name='Ejercicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('enunciado', models.CharField(max_length=30, verbose_name='enunciado')),
                ('solucion', models.CharField(max_length=50, verbose_name='solucion')),
                ('dificultad', models.FloatField(db_index=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='dificultad')),
                ('fuente', models.CharField(blank=True, choices=[('deepseek', 'DeepSeek'), ('llama', 'Llama'), ('chatgpt', 'ChatGPT')], help_text='De dónde salió el ejercicio', max_length=100, null=True, verbose_name='fuente')),
                ('docente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.docente', verbose_name='docente')),
                ('materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.materia', verbose_name='materia')),
                ('unidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.unidad', verbose_name='unidad')),
                ('tipo_ejercicio', models.ManyToManyField(to='ejercicios.tipoejercicio', verbose_name='tipo de ejercicio')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GruposEstudio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del grupo')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción del grupo')),
                ('docente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.docente', verbose_name='Docente del grupo')),
                ('materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.materia', verbose_name='Materia del grupo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Intento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('es_correcto', models.BooleanField(verbose_name='¿Es correcto?')),
                ('puntos', models.FloatField(help_text='Valor entre 0 y 1', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Puntos')),
                ('fecha_intento', models.DateTimeField(verbose_name='Fecha del intento')),
                ('tiempo_en_segundos', models.FloatField(help_text='Tiempo total que tardó el estudiante en resolver el ejercicio', verbose_name='Tiempo en segundos')),
                ('respuesta_estudiante', models.CharField(max_length=150, verbose_name='respuesta estudiante')),
                ('ejercicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ejercicios.ejercicio', verbose_name='ejercicio')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.estudiante', verbose_name='estudiante')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contexto_ejercicio', models.CharField(max_length=512, verbose_name='contexto generado por IA')),
                ('resumen_ejercicio', models.CharField(max_length=512, verbose_name='')),
                ('feedback', models.JSONField(verbose_name='feedback generado por IA')),
                ('fuente_ia', models.CharField(choices=[('deepseek', 'DeepSeek'), ('llama', 'Llama'), ('chatgpt', 'ChatGPT')], max_length=50, verbose_name='fuente IA')),
                ('fecha_feedback', models.DateTimeField(auto_now_add=True, verbose_name='fecha del feedback')),
                ('intento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ejercicios.intento', verbose_name='feedback')),
            ],
        ),
        migrations.CreateModel(
            name='IntentoGrupal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('es_correcto', models.BooleanField(verbose_name='¿Es correcto?')),
                ('puntos', models.FloatField(help_text='Valor entre 0 y 1', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Puntos')),
                ('fecha_intento', models.DateTimeField(verbose_name='Fecha del intento')),
                ('tiempo_en_segundos', models.FloatField(help_text='Tiempo total que tardó el estudiante en resolver el ejercicio', verbose_name='Tiempo en segundos')),
                ('respuesta_final', models.CharField(verbose_name='respuesta final del ejercicio')),
                ('ejercicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ejercicios.ejercicio', verbose_name='id_ejercicio')),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ejercicios.gruposestudio', verbose_name='id_grupo')),
            ],
            options={
                'verbose_name': 'Intento Grupal',
                'verbose_name_plural': 'Intentos Grupales',
                'unique_together': {('grupo', 'ejercicio')},
            },
        ),
        migrations.CreateModel(
            name='PasoEjercicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orden', models.PositiveIntegerField()),
                ('contenido', models.TextField()),
                ('ejercicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ejercicios.ejercicio')),
            ],
        ),
        migrations.CreateModel(
            name='IntentoPaso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orden', models.PositiveIntegerField(verbose_name='Orden del paso')),
                ('contenido', models.TextField(verbose_name='Contenido del paso')),
                ('datos_aux', models.JSONField(help_text='Valores o variables intermedias', verbose_name='Datos auxiliares')),
                ('intento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pasos', to='ejercicios.intento', verbose_name='Intento')),
            ],
            options={
                'verbose_name': 'Paso de Intento',
                'verbose_name_plural': 'Pasos de Intento',
                'ordering': ['orden'],
                'unique_together': {('intento', 'orden')},
            },
        ),
        migrations.CreateModel(
            name='MiembrosGrupo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.estudiante', verbose_name='id_estudiante')),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ejercicios.gruposestudio', verbose_name='id_grupo')),
            ],
            options={
                'verbose_name': 'Miembro del Grupo',
                'verbose_name_plural': 'Miembros del Grupo',
                'unique_together': {('estudiante', 'grupo')},
            },
        ),
        migrations.CreateModel(
            name='RespuestaIndividual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tiempo_en_segundos', models.FloatField(help_text='Tiempo total que tardó el estudiante en resolver el ejercicio', verbose_name='Tiempo en segundos')),
                ('respuesta', models.CharField(max_length=150, verbose_name='respuesta_estudiante_grupo')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.estudiante', verbose_name='estudiante')),
                ('intento_grupal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ejercicios.intentogrupal', verbose_name='intento_grupal')),
            ],
            options={
                'unique_together': {('estudiante', 'intento_grupal')},
            },
        ),
        migrations.CreateModel(
            name='FeedbackPasos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orden', models.PositiveIntegerField(verbose_name='orden del paso')),
                ('contenido', models.TextField(verbose_name='contenido del paso')),
                ('datos_aux', models.JSONField(help_text='Datos adicionales que pueden ser útiles para el paso, como variables, resultados intermedios, etc.', verbose_name='datos auxiliares')),
                ('feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ejercicios.feedback', verbose_name='feedback pasos')),
                ('tipo_feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ejercicios.tipofeedback', verbose_name='tipo de feedback')),
            ],
            options={
                'verbose_name': 'Feedback Paso',
                'verbose_name_plural': 'Feedback Pasos',
                'ordering': ['orden'],
                'unique_together': {('feedback', 'orden')},
            },
        ),
    ]
